filter(committee_name == "Moore  Wes For Maryland") |>
mutate(month = floor_date(expenditure_date, "month")) |>
group_by(month) |>
summarise(total_amount = sum(amount)) |>
arrange(month)
maryland_expenses <- maryland_expenses |> mutate(expenditure_date=mdy(expenditure_date))
maryland_expenses |>
filter(committee_name == "Moore  Wes For Maryland") |>
mutate(month = floor_date(expenditure_date, "month")) |>
group_by(month) |>
summarise(total_amount = sum(amount)) |>
arrange(month)
View(maryland_expenses)
umd_courses <- read_rds("data/umd_courses.rds")
maryland_expenses <- read_csv("data/maryland_expenses.csv")
maryland_expenses <- maryland_expenses |> mutate(expenditure_date=mdy(expenditure_date))
maryland_expenses |>
filter(committee_name == "Moore  Wes For Maryland") |>
mutate(month = floor_date(expenditure_date, "month")) |>
group_by(month) |>
summarise(total_amount = sum(amount)) |>
arrange(month)
maryland_expenses_in_state <- maryland_expenses |>
mutate(
spending_location = case_when(
str_detect(address, " Maryland ") ~ "In-state",
.default = "Out of state"
maryland_expenses_in_state <- maryland_expenses |>
mutate(
spending_location = case_when(
str_detect(address, " Maryland ") ~ "In-state",
.default = "Out of state"
)
)
View(maryland_expenses_in_state)
maryland_expenses_in_state |>
group_by(spending_location)
maryland_expenses_in_state |>
group_by(spending_location) |>
summarize(total = sum(amount)) |>
arrange(desc(total))
View(maryland_expenses_in_state)
maryland_expenses_in_state |>
group_by(spending_location) |>
summarize(total = sum(amount)) |>
arrange(desc(total))
maryland_expenses |>
group_by(expense_purpose) |>
summarise(total_amount = sum(amount)) |>
arrange(total_amount)
maryland_expenses |>
group_by(expense_purpose) |>
summarise(total_amount = sum(amount)) |>
arrange(desc(total_amount))
knitr::opts_chunk$set(echo = TRUE)
# Load in the Maryland state agency payments data, making sure that it correctly sets the datatypes using all of the rows
payments <- read_csv("data/State_of_Maryland_Payments_Data__FY2008_to_FY2024.csv") |>
clean_names()
# Turn off scientific notation
options(scipen=999)
# Load the tidyverse
library(tidyverse)
# Load janitor
library(janitor)
# Load in the Maryland state agency payments data, making sure that it correctly sets the datatypes using all of the rows
payments <- read_csv("data/State_of_Maryland_Payments_Data__FY2008_to_FY2024.csv") |>
clean_names()
# Load in the Maryland grants and loan data
md_grants_loans <- read_csv("data/State_of_Maryland_Grant_and_Loan_Data__FY2009_to_FY2022.csv") |>
clean_names()
View(md_grants_loans)
View(md_grants_loans)
md_grants_loans |>
filter(str_detect(grantee, "Prince George"))
md_grants_loans |>
filter(str_detect(grantee, "Prince George," "school"))
md_grants_loans |>
filter(str_detect(grantee, (Prince George,school))
md_grants_loans |>
filter(str_detect(grantee, "(Prince George")) }>
md_grants_loans |>
filter(str_detect(grantee, "(Prince George")) |>
group_by(grantee)
md_grants_loans |>
filter(str_detect(grantee, "Prince George")) |>
group_by(grantee)
md_grants_loans |>
filter(str_detect(grantee, "Prince George")) |>
arrange(grantee)
md_grants_loans |>
filter(str_detect(grantee, "Prince George"))
md_grants_loans |>
filter(str_detect(grantee, "Prince George")(grantee, "school"))
md_grants_loans |>
filter(str_detect(grantee, "Prince George" & "school"))
md_grants_loans |>
filter(str_detect(grantee, "Prince George" & "school"))
md_grants_loans |>
filter(str_detect(grantee, "Prince George" & "school"))
md_grants_loans |>
filter(str_detect(grantee, "Prince George's County")) | (str_detect(grantee, "Prince George Schools")
md_grants_loans |>
filter(str_detect(grantee, "Prince George's County")) | (str_detect(grantee, "Prince George Schools"))
md_grants_loans |>
filter(str_detect(grantee, "Prince George's County"))
md_grants_loans |>
filter(str_detect(grantee, "PRINCE GEORGE COUNTY PUBLIC SCHOOLS"))
md_grants_loans |>
filter(str_detect(grantee, "PRINCE GEORGE COUNTY PUBLIC SCHOOLS")) |  filter(str_detect(grantee, "PRINCE GEORGE COUNTY"))
md_grants_loans |>
filter(str_detect(grantee, "PRINCE GEORGE COUNTY PUBLIC SCHOOLS")) |>
filter(str_detect(grantee, "PRINCE GEORGE COUNTY"))
pg_schools = md_grants_loans |>
filter(str_detect(grantee, "PRINCE GEORGE COUNTY PUBLIC SCHOOLS"))
View(payments)
View(payments)
payments |>
filter(agency_name(str_detect("university")))
payments |>
filter(agency_name(str_detect("UNIVERSITY")))
# Load in the Maryland state agency payments data, making sure that it correctly sets the datatypes using all of the rows
payments <- read_csv("data/State_of_Maryland_Payments_Data__FY2008_to_FY2024.csv") |>
clean_names()
# Load in the Maryland grants and loan data
md_grants_loans <- read_csv("data/State_of_Maryland_Grant_and_Loan_Data__FY2009_to_FY2022.csv") |>
clean_names()
payments |>
filter(agency_name(str_detect("UNIVERSITY")))
payments |>
filter(agency_name))
payments |>
filter(agency_name, "CAPITAL PROJECTS- UNIVERSITY OF MARYLAND")
payments |>
filter(agency_name = "CAPITAL PROJECTS- UNIVERSITY OF MARYLAND")
payments |>
filter(str_detect(agency_name, "CAPITAL PROJECTS- UNIVERSITY OF MARYLAND"))
payments |>
filter(str_detect(agency_name, "CAPITAL PROJECTS- UNIVERSITY OF MARYLAND")) |>
group_by (vendor_name) |>
summarise (total = sum(amount))
md_grants_loans |>
filter(str_detect(grantee, "Stem Cell"))
md_grants_loans |>
filter(str_detect(grantee, "Stem Cell")) |filter(str_detect(grantor, "Stem Cell"))
md_grants_loans |>
filter(str_detect(grantee, "Stem Cell")) | filter(str_detect(grantor, "Stem Cell"))
md_grants_loans |>
filter(str_detect(grantee, "Stem Cell")) |>
filter(str_detect(grantor, "Stem Cell"))
md_grants_loans |>
filter(str_detect(grantee, "Stem Cell")) |> filter(str_detect(grantor, "Stem Cell")
md_grants_loans |>
filter(str_detect(grantee, "Stem Cell")) |> filter(str_detect(grantor, "Stem Cell"))
md_grants_loans |>
filter(str_detect(grantee, "Stem Cell")) | filter(str_detect(grantor, "Stem Cell"))
md_grants_loans |>
filter(str_detect(grantee, "Stem Cell")) | filter(str_detect(source, "Stem Cell"))
md_grants_loans |>
filter(str_detect(grantee, "Stem Cell")) | filter(str_detect(grantor, "Stem Cell"))
md_grants_loans |>
filter(str_detect(grantee, "Stem Cell")) |>
filter(str_detect(grantor, "Stem Cell"))
md_grants_loans |>
filter(
str_detect(grantee, "Stem Cell") |str_detect(grantor, "Stem Cell")
)
md_grants_loans |>
filter(str_detect(grantee, "Stem Cell") |str_detect(grantor, "Stem Cell"))
md_grants_loans |>
filter(str_detect(grantee, "Stem Cell") |str_detect(grantor, "Stem Cell")) |>
group_by(fiscal_year)
md_grants_loans |>
filter(str_detect(grantee, "Stem Cell") |str_detect(grantor, "Stem Cell")) |>
group_by(fiscal_year) |>
summarise(total = sum(amount)) |>
arrange (desc(amount))
md_grants_loans |>
filter(str_detect(grantee, "Stem Cell") |str_detect(grantor, "Stem Cell")) |>
group_by(fiscal_year) |>
summarise(total = sum(amount))
md_grants_loans |>
filter(str_detect(grantee, "Stem Cell") |str_detect(grantor, "Stem Cell")) |>
group_by(fiscal_year) |>
summarise(total = sum(amount)) |>
arrange (desc(total))
md_grants_loans |>
filter(str_detect(zip_code, 20742))
md_grants_loans |>
filter(str_detect(zip_code, "20742"))
md_grants_loans |>
filter(str_detect(zip_code, "20742")) |>
group_by(grantee) |>
summarise(total = sum(amount))
md_grants_loans |>
filter(str_detect(zip_code, "20742")) |>
group_by(grantee) |>
summarise(total = sum(amount)) |>
arrange(desc(total))
pg_schools = md_grants_loans |>
filter(str_detect(grantee, "PRINCE GEORGE COUNTY PUBLIC SCHOOLS") |str_detect(grantee, "schools"))
View(pg_schools)
View(pg_schools)
pg_schools = md_grants_loans |>
filter(str_detect(grantee, "PRINCE GEORGE COUNTY PUBLIC SCHOOLS") | str_detect(grantee, "schools"))
pg_schools = md_grants_loans |>
filter(str_detect(grantee, "PRINCE GEORGE COUNTY PUBLIC SCHOOLS") | str_detect(grantee, "schools"))
pg_schools
pg_schools <- md_grants_loans |>
filter(str_detect(grantee, "PRINCE GEORGE COUNTY PUBLIC SCHOOLS") | str_detect(grantee, "schools"))
pg_schools
pg_schools |>
group_by(fiscal_year) |>
summarise(total = sum(amount))
pg_schools |>
group_by(fiscal_year) |>
summarise(total = sum(amount))
arrange(desc(total))
pg_schools |>
group_by(fiscal_year) |>
summarise(total=sum(amount))
arrange(desc(total))
pg_schools <- md_grants_loans |>
filter(str_detect(grantee, "PRINCE GEORGE COUNTY PUBLIC SCHOOLS") | str_detect(grantee, "schools"))
pg_schools
pg_schools |>
group_by(fiscal_year) |>
summarise(total = sum(amount))
arrange(desc(total))
pg_schools <- md_grants_loans |>
filter(str_detect(grantee, "PRINCE GEORGE'S") | str_detect(grantee, "schools"))
pg_schools
pg_schools <- md_grants_loans |>
filter(str_detect(grantee, "PRINCE GEORGE'S") & str_detect(grantee, "SCHOOL"))
pg_schools
pg_schools <- md_grants_loans |>
filter(str_detect(grantee, "PRINCE GEORGE")
pg_schools
pg_schools <- md_grants_loans |>
filter(str_detect(grantee, "PRINCE GEORGE")
pg_schools <- md_grants_loans |>
filter(str_detect(grantee, "PRINCE GEORGE"))
pg_schools <- md_grants_loans |>
filter(str_detect(grantee, "PRINCE GEORGE"))
pg_schools <- md_grants_loans |>
filter(str_detect(grantee, "PRINCE GEORGE"))
pg_schools
pg_schools <- md_grants_loans |>
filter(str_detect(grantee, "PRINCE GEORGE" | "SCHOOL"))
pg_schools <- md_grants_loans |>
filter(str_detect(grantee, "PRINCE GEORGE COUNTY PUBLIC SCHOOLS")
pg_schools
md_grants_loans |>
filter(str_detect(grantee, "PRINCE GEORGE COUNTY PUBLIC SCHOOLS")
md_grants_loans |>
filter(str_detect(grantee, "PRINCE GEORGE COUNTY PUBLIC SCHOOLS"))
pg_schools |> payments
pg_schools = payments |>
filter(str_detect(vendor_name, "PRINCE GEORGE COUNTY PUBLIC SCHOOLS")
pg_schools = payments |>
filter(str_detect(vendor_name, "PRINCE GEORGE COUNTY PUBLIC SCHOOLS"))
pg_schools = payments |>
filter(str_detect(vendor_name, "PRINCE GEORGE COUNTY PUBLIC SCHOOLS"))
pg_schools
pg_schools = payments |>
filter(str_detect(vendor_name, "PRINCE GEORGE"))
pg_schools
pg_schools = payments |>
filter(str_detect(vendor_name, "PRINCE GEORGE") & str_detect(vendor_name, "SCHOOL")
pg_schools
pg_schools = payments |>
filter(str_detect(vendor_name, "PRINCE GEORGE") & str_detect(vendor_name, "SCHOOL"))
pg_schools = payments |>
filter(str_detect(vendor_name, "PRINCE GEORGE") & str_detect(vendor_name, "SCHOOL"))
pg_schools
pg_schools |>
group_by(fiscal_year) |>
summarise(total = sum(amount))
arrange(desc(total))
pg_schools |>
group_by(fiscal_year) |>
summarise(total = sum(amount))
pg_schools |>
group_by(fiscal_year) |>
summarise(total = sum(amount)) |>
arrange(desc(total))
setwd("~/Data Journalism/Data_Jour_Reverse_Engineering")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(readr)
library(scales)
library(janitor)
# Load the data from 538.
donation_df = read_csv("data/sports-political-donations.csv")
# Clean column names to change case to lower and remove spaces.
donation_df <- clean_names(donation_df)
# Use parse_number to convert the amount column to dbl.
donation_df <- donation_df |>
mutate(amount = parse_number(amount))
donation_df
View(donation_df)
donations_by_party <- donation_df |>
group_by(party) |>
summarise(party_total = sum(amount)) |>
mutate(pct_of_total_donations = percent(party_total / sum(party_total)))|>
arrange(desc(party_total))
donations_by_party
wnba_donations <- donation_df |>
filter(str_detect(league, "WNBA")) |>
group_by(party) |>
summarise(party_total = sum(amount)) |>
mutate(pct_of_total = percent(party_total / sum(party_total)))|>
arrange(desc(pct_of_total))
wnba_donations
loeffler_r_wnba_donations <- donation_df |>
filter(str_detect(league, "WNBA")) |>
filter(owner == "Kelly Loeffler") |>
filter (party == "Republican") |>
summarise (loeffler_r_total = sum(amount)) |>
mutate(percent_of_total = (loeffler_r_total / wnba_donations$party_total[2])*100)
loeffler_r_wnba_donations
wnba_no_loeffler <- donation_df |>
filter(str_detect(league, "WNBA")) |>
filter(owner != "Kelly Loeffler") |>
group_by(party) |>
summarise (party_total = sum(amount)) |>
mutate(pct_of_total = percent(party_total / sum(party_total)))|>
arrange(desc(party_total))
wnba_no_loeffler
# Update recipient values to all upper case for ease of searching.
donation_df <- donation_df |>
mutate(recipient = str_to_upper(recipient))
# Find the 13 owners who contributed to Trump's campaign or Trump super PACs.
trump_2020 <- donation_df |>
filter(election_year == 2020) |>
filter(str_detect(recipient,"TRUMP")) |>
group_by(owner)
# We only found 12 owners this way. How much did they contribute together?
total_12 <- sum(trump_2020$amount)
total_12
# They contributed $1,544,421. How much money are we still looking for?
1746423 - total_12
# We need to find $202,002 in contributions for Trump still. Let's save the total we're looking for, we may need it as a variable.
total_13 <- 1746423
# Find all 2020 donations from Peter Karmanos, grouped by recipient so we can examine the list of PACs.
karmanos_donations <- donation_df |>
filter(election_year == 2020) |>
filter(str_detect(owner,"Peter Karmanos"))|>
group_by(recipient)
karmanos_donations
# Add contributions to "BLACK AMERICANS TO RE-ELECT THE PRESIDENT" to trump_2020.
trump_2020 <- donation_df |>
filter(election_year == 2020) |>
filter(str_detect(recipient,"TRUMP") | recipient == "BLACK AMERICANS TO RE-ELECT THE PRESIDENT")  |>
group_by(owner) |>
summarise(contributions = sum(amount))
# What is the new running total for all contributions to Trump? Have we hit our target of $1,746,423?
new_total_13 = sum(trump_2020$contributions)
new_total_13
# It's $1,546,423. How much money are we still missing?
still_missing = total_13 - new_total_13
still_missing
# We still need to find $200,000 in contributions to Trump-supporting PACs.
still_missing
new_total_13
total_13
new_total_13
still_missing <- total_13 - new_total_13
still_missing
knitr::opts_chunk$set(echo = TRUE)
# Add contributions to "BLACK AMERICANS TO RE-ELECT THE PRESIDENT" to trump_2020.
trump_2020 <- donation_df |>
filter(election_year == 2020) |>
filter(str_detect(recipient,"TRUMP") | recipient == "BLACK AMERICANS TO RE-ELECT THE PRESIDENT")  |>
group_by(owner) |>
summarise(contributions = sum(amount))
# What is the new running total for all contributions to Trump? Have we hit our target of $1,746,423?
new_total_13 = sum(trump_2020$contributions)
new_total_13
# It's $1,546,423. How much money are we still missing?
still_missing <- total_13 - new_total_13
still_missing
total_13
# We still need to find $200,000 in contributions to Trump-supporting PACs.
# Turn off scientific notation
options(scipen=999)
still_missing <- total_13 - new_total_13
still_missing
# Add WINRED and the RNC.
trump_2020 <- donation_df |>
filter(election_year == 2020) |>
filter(str_detect(recipient,"TRUMP") |
recipient == "BLACK AMERICANS TO RE-ELECT THE PRESIDENT" |
recipient == "REPUBLICAN NATIONAL COMMITTEE" |
recipient == "WINRED") |>
group_by(owner) |>
summarise(contributions = sum(amount))
sum(trump_2020$contributions)
#Total is $2,424,343. That's over the $1,746,423 we are looking for.
# Pull a list of all non-Democratic recipients of donations from the 13 Trump-supporting owners.
trump_owner_breakout <- donation_df |>
group_by(recipient)|>
filter(party !=  "Democrat")|>
filter(election_year == "2020") |>
filter(owner == "Bill Foley" |
owner == "Bill Hornbuckle" |
owner == "Charles Johnson" |
owner == "Dan DeVos" |
owner == "Jack Roush" |
owner == "James Dolan" |
owner == "Kelly Loeffler" |
owner == "Mike Brown" |
owner == "Peter Karmanos" |
owner == "Robert Plummer" |
owner == "Roger Penske" |
owner == "Tilman Fertitta" |
owner == "Todd Ricketts") |>
arrange (recipient)
trump_owner_breakout
# Add "AMERICA FIRST ACTION, INC."
trump_2020 <- donation_df |>
filter(election_year == 2020) |>
filter(str_detect(recipient, "TRUMP") |
recipient == "BLACK AMERICANS TO RE-ELECT THE PRESIDENT" |
recipient == "AMERICA FIRST ACTION, INC.") |>
group_by(owner) |>
summarise(contributions = sum(amount))
# Now how much did our 13 owners contribute?
final_total_13 = sum(trump_2020$contributions)
final_total_13
# $1,746,423. Bingo.
# Find the 20 owners who contributed to Biden's campaign or Biden super PACs.
biden_2020 <- donation_df |>
group_by(owner) |>
filter(election_year == 2020) |>
filter(str_detect(recipient,"BIDEN")) |>
summarise (total = sum(amount))
glimpse(biden_2020)
# We have 20 rows, that looks good. Now how much have they collectively donated to Biden?
total_biden = sum(biden_2020$total)
total_biden
# Answer is $228,545. That's short, how much money are we missing from the 20 owners?
total_20 <- 405745
missing_biden = total_20 - total_biden
missing_biden
# We are still missing $177,200 in donations for Biden-supporting PACs.
missing_biden
total_biden
# Look at Adam Silver contributions in 2020.
donation_df |>
filter(election_year == 2020) |>
filter(owner == "Adam Silver") |>
arrange(recipient)
# Look at John Rogers contributions in 2020.
donation_df |>
filter(election_year == 2020) |>
filter(owner == "John Rogers") |>
arrange(recipient)
# Revisit the biden_2020 dataframe, adding code to exclude commissioners and include the UNITE THE COUNTRY PAC.
biden_2020 <- donation_df |>
group_by(owner) |>
filter(team != "Commissioner") |>
filter(election_year == 2020) |>
filter(str_detect(recipient,"BIDEN") | (recipient == "UNITE THE COUNTRY")) |>
summarise (total = sum(amount))
# How much do the Biden donations total to now?
total_biden_new = sum(biden_2020$total)
total_biden_new
# $305,745 is closer. How much are we still missing?
missing_biden_new = total_20 - total_biden_new
missing_biden_new
# We are still missing $100,000.
# Look at the non-Republican donations of the 20 owners named by 538 in the article as contributing to Biden or Biden PACs in 2020.
biden_owner_breakout <- donation_df |>
group_by(recipient)|>
filter(party !=  "Republican")|>
filter(election_year == "2020") |>
filter(owner == "Arthur Blank" |
owner == "Arthur J. Rooney" |
owner == "Bill Hornbuckle" |
owner == "Billie Jean King" |
owner == "David Blitzer" |
owner == "David Bonderman" |
owner == "Herbert Fritch" |
owner == "Herbert Simon" |
owner == "Ilana Kloss" |
owner == "James Dinan" |
owner == "Jeff Dickerson" |
owner == "Jim Pohlad" |
owner == "John Rogers" |
owner == "Laura Ricketts" |
owner == "Marc Lasry" |
owner == "Mary Kelly" |
owner == "Michael Alter" |
owner == "Peter Guber" |
owner == "Tom Werner" |
owner == "Zygi Wilf") |>
arrange (recipient)
biden_owner_breakout
# Add AB PAC to biden_2020.
biden_2020 <- donation_df |>
group_by(owner) |>
filter(team != "Commissioner") |>
filter(election_year == 2020) |>
filter(
str_detect(recipient,"BIDEN") |
str_detect(recipient,"UNITE THE COUNTRY") |
str_detect(recipient,"AB PAC")) |>
summarise (total = sum(amount))
# What is the new total?
total_biden_final = sum(biden_2020$total)
total_biden_final
# There is the $405,745 we were looking to match from the article.
